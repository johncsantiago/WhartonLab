reversescale =T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
color = ~Score,
line = list(color = "black", width = 1.5)),
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue"))),
marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
reversescale =T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
color = ~Score,
line = list(color = "black", width = 1.5),
hoverinfo = "text",
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3)))
fig2 <- fig %>% add_trace(fig, data, x = ~notInCat, y = ~term,
type = 'bar',
name = "Total Genes",
##colors = rep("lightgrey", nrow(data)),
marker = list(color = "lightgrey",line = list(color = "black", width = 1.5), colorbar = F),
hoverinfo = "text",
hovertext = "")
fig3 <- fig2 %>% layout(xaxis = list(title = "Number of Genes"),
yaxis = list(title = ""),
title = "Suppressor Enriched GO Terms",
margin = m,
barmode = 'stack',
shapes = list(
list(type = "rect",
fillcolor = "white",
line = list(color = "black", width = 2.5),
opacity = 1,
x0 = -30, x1 = -5, xref = "x",
y0 = -.5, y1 = 15.5, yref = "y",
layer = "below"),
list(type = "rect",
fillcolor = "white",
line = list(color = "black", width = 2.5),
opacity = 1,
x0 = -30, x1 = -5, xref = "x",
y0 = 15.5, y1 = 21.5, yref = "y"),
list(type = "rect",
fillcolor = "white",
line = list(color = "black", width = 2.5),
opacity = 1,
x0 = -30, x1 = -5, xref = "x",
y0 = 21.5, y1 = 31.5, yref = "y")
))
fig4 <- fig3 %>% add_annotations(x = -17.5,
y = 7.5,
text = "Molecular Function",
showarrow = F,
textangle = -90,
font = list(size = 15))
fig5 <- fig4 %>% add_annotations(x = -17.5,
y = 18.5,
text = "Cellular Component",
showarrow = F,
textangle = -90,
font = list(size = 15))
fig6 <- fig5 %>% add_annotations(x = -17.5,
y = 27,
text = "Biological Process",
showarrow = F,
textangle = -90,
font = list(size = 15))
fig6
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes")
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue"))),
marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
reversescale =T)
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue"))),
marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))))
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue"))))
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.5,1), c("brown","gold", "steelblue"))))
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.15,1), c("brown","gold", "steelblue"))))
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.15,.21), c("brown","gold", "steelblue"))))
fig
head(data)
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue"))),
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
reversescale =T)
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue"))),
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
#reversescale =T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
color = ~Score,
line = list(color = "black", width = 1.5),
hoverinfo = "text",
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3)))
fig
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3))
hovertext
data$Score
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
color = ~Score,
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue"))))#,
fig
type(data$Score)
data$adjp
type(data$adjp)
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes")#,
fig
summary(data$Score)
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score))#,
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score,
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
#reversescale =T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
line = list(color = "black", width = 1.5))#,
hoverinfo = "text",
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score,
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
#reversescale =T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
line = list(color = "black", width = 1.5)))#,
fog
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score,
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
#reversescale =T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
line = list(color = "black", width = 1.5)),
hoverinfo = "text",
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3)))
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score,
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
reversescale =T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
line = list(color = "black", width = 1.5)),
hoverinfo = "text",
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3)))
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
marker = list(colorscale = list(reversescale =T,
c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score,
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
line = list(color = "black", width = 1.5)),
hoverinfo = "text",
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3)))
fig
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score,
reversescale = T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
line = list(color = "black", width = 1.5)),
hoverinfo = "text",
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3)))
fig
sigGO = Repress.GO[c(row.names(Sup.BP.RT),
row.names(Sup.CC.RT),
row.names(Sup.MF.RT)), ]
sigGO = sigGO[row.names(sigGO)!="GO:0032991",]
sigGO = sigGO[, c("category", "term","adjp", "numDEInCat", "numInCat", "ontology")]
sigGO$notInCat = sigGO$numInCat - sigGO$numDEInCat
data = sigGO[nrow(sigGO):1,c("term","adjp","numDEInCat", "numInCat", "category", "ontology", "notInCat")]
data$Score = -log10(data$adjp)
data$term = factor(data$term, levels = c(unique(data$term)))
m <- list(
l = 100,
r = 50,
b = 100,
t = 100,
pad = 10
)
fig <- plot_ly(data,
x = ~numDEInCat, y = ~term,
type = 'bar',
name = "Candidate Suppressor Genes",
#marker = list(colorscale = list(c(0,.9,1), c("#EA337F","#FEFF54", "#387EF7"))),
#marker = list(colorscale = list(c(0,.9,1), c("#C1607E","#EBE3A4", "#419193"))),
#marker = list(colorscale = list(c(0, .75, 1), c("#E7327F","#FEFE57", "#3A7EF7"))),
marker = list(colorscale = list(c(0,.9,1), c("brown","gold", "steelblue")),
color = ~Score,
reversescale = T,
colorbar = list(title = "-log10(FDR)",
len = .8, outlinewidth = 0,
tickformat = ".2f",
tick0 = 0, xpad = 10),
line = list(color = "black", width = 1.5)),
hoverinfo = "text",
hovertext = paste("Sample:", data$term,
"\nGO ID: ", data$category,
"\nTotal DE: ", data$numDEInCat,
"\nTotal in Cat.: ", data$numInCat,
"\nFDR: ", signif(data$adjp, 3)))
fig2 <- fig %>% add_trace(fig, data, x = ~notInCat, y = ~term,
type = 'bar',
name = "Total Genes",
##colors = rep("lightgrey", nrow(data)),
marker = list(color = "lightgrey",line = list(color = "black", width = 1.5), colorbar = F),
hoverinfo = "text",
hovertext = "")
fig3 <- fig2 %>% layout(xaxis = list(title = "Number of Genes"),
yaxis = list(title = ""),
title = "Suppressor Enriched GO Terms",
margin = m,
barmode = 'stack',
shapes = list(
list(type = "rect",
fillcolor = "white",
line = list(color = "black", width = 2.5),
opacity = 1,
x0 = -30, x1 = -5, xref = "x",
y0 = -.5, y1 = 15.5, yref = "y",
layer = "below"),
list(type = "rect",
fillcolor = "white",
line = list(color = "black", width = 2.5),
opacity = 1,
x0 = -30, x1 = -5, xref = "x",
y0 = 15.5, y1 = 21.5, yref = "y"),
list(type = "rect",
fillcolor = "white",
line = list(color = "black", width = 2.5),
opacity = 1,
x0 = -30, x1 = -5, xref = "x",
y0 = 21.5, y1 = 31.5, yref = "y")
))
fig4 <- fig3 %>% add_annotations(x = -17.5,
y = 7.5,
text = "Molecular Function",
showarrow = F,
textangle = -90,
font = list(size = 15))
fig5 <- fig4 %>% add_annotations(x = -17.5,
y = 18.5,
text = "Cellular Component",
showarrow = F,
textangle = -90,
font = list(size = 15))
fig6 <- fig5 %>% add_annotations(x = -17.5,
y = 27,
text = "Biological Process",
showarrow = F,
textangle = -90,
font = list(size = 15))
fig6
treemapPlot(Sup.CC.RT)
scatterPlot(Sup.CC.SM, Sup.CC.RT)
fig6
color.function <- colorRampPalette( c( "steelblue" , "gold", "brown" ) )
order = c(1:17, NA, 18:23, NA, 24:35)
par(mar = c(3,12,1,3))
barplot(height = data$numInCat[order],
names.arg = data$term[order],
horiz = T,
cex.names = .5,
xlim = c(0,900),
axes =F)
barplot(height = data$numDEInCat[order],
names.arg = "",
add = T,
horiz = T,
col = "gold",
xlim = c(0,900),
axes = F)
axis(1, seq(0, 1000, by=100), labels=T, las = 2, cex.axis = .5)
axis(1, seq(0, 1000, by=25), labels=FALSE, tck=-.01)
GO.data = Enhancer.GO
GO.ontology = "BP"
go_analysis = GO.data$category[GO.data$adjp <= .05 & GO.data$ontology == GO.ontology]
scores = setNames(-log10(GO.data$adjp), go_analysis)
simMatrix <- calculateSimMatrix(go_analysis,
orgdb="org.Dm.eg.db",
ont=GO.ontology,
method="Rel")
reducedTerms <- reduceSimMatrix(simMatrix,
scores,
threshold=0.7,
orgdb="org.Dm.eg.db")
Enh.BP.SM = simMatrix
Enh.BP.RT = reducedTerms
Enh.BP.RT$Freq = 1
i=1
while(i<=nrow(Enh.BP.RT)){
Enh.BP.RT$Freq[i] =  sum(Enh.BP.RT$parentTerm == Enh.BP.RT$parentTerm[i])
i=i+1
}
Enh.BP.RT = Enh.BP.RT[order(Enh.BP.RT$Freq, decreasing = T),]
GO.ontology = "CC"
go_analysis = GO.data$category[GO.data$adjp <= .05 & GO.data$ontology == GO.ontology]
scores = setNames(-log10(GO.data$adjp), go_analysis)
simMatrix <- calculateSimMatrix(go_analysis,
orgdb="org.Dm.eg.db",
ont=GO.ontology,
method="Rel")
reducedTerms <- reduceSimMatrix(simMatrix,
scores,
threshold=0.7,
orgdb="org.Dm.eg.db")
Enh.CC.SM = simMatrix
Enh.CC.RT = reducedTerms
Enh.CC.RT$Freq = 1
i=1
while(i<=nrow(Enh.CC.RT)){
Enh.CC.RT$Freq[i] =  sum(Enh.CC.RT$parentTerm == Enh.CC.RT$parentTerm[i])
i=i+1
}
Enh.CC.RT = Enh.CC.RT[order(Enh.CC.RT$Freq, decreasing = T),]
GO.ontology = "MF"
go_analysis = GO.data$category[GO.data$adjp <= .05 & GO.data$ontology == GO.ontology]
scores = setNames(-log10(GO.data$adjp), go_analysis)
simMatrix <- calculateSimMatrix(go_analysis,
orgdb="org.Dm.eg.db",
ont=GO.ontology,
method="Rel")
reducedTerms <- reduceSimMatrix(simMatrix,
scores,
threshold=0.7,
orgdb="org.Dm.eg.db")
Enh.MF.SM = simMatrix
Enh.MF.RT = reducedTerms
Enh.MF.RT$Freq = 1
i=1
while(i<=nrow(Enh.MF.RT)){
Enh.MF.RT$Freq[i] =  sum(Enh.MF.RT$parentTerm == Enh.MF.RT$parentTerm[i])
i=i+1
}
Enh.MF.RT = Enh.MF.RT[order(Enh.MF.RT$Freq, decreasing = T),]
treemapPlot(Enh.CC.RT)
scatterPlot(Enh.CC.SM, Enh.CC.RT)
fig6
shiny::runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
head(bar.data)
goi = data.frame(Start = start,
End = end,
CHR = chr)
runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
fbID = data.frame(FBgn = c(rep(GeneIDKey$FBgn, 2)),
Symbol = c(rep(GeneIDKey$Symbol, 2)),
Position = c(GeneIDKey$Start, GeneIDKey$End))
head(fbID)
grep("FBgn0000003", fbID$FBgn)
fbID[grep("FBgn0000003", fbID$FBgn),]
runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
runApp('Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer')
runApp(launch.browser = TRUE)
list.files
list.files()
setwd("/Users/johncsantiago/Documents/GitHub/WhartonLab/DeficiencyScreen/DeficiencyMapViewer/")
list.files
list.files()
runApp(launch.browser = TRUE)
